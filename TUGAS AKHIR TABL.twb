<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Wholesale customers data (wholesalendata)' inline='true' name='federated.0zxz2nk0hrohxx1akn8za1kdjlzr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='wholesalendata' name='excel-direct.0lsf4yn162v3yb14i7bed1r54ia4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/asus/Documents/! my documents/praktikum tugas/PRAKTOKUM PTI/wholesalendata.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0lsf4yn162v3yb14i7bed1r54ia4' name='Wholesale customers data' table='[&apos;Wholesale customers data$&apos;]' type='table'>
          <columns gridOrigin='A1:H441:no:A1:H441:0' header='yes' outcome='6'>
            <column datatype='integer' name='Channel' ordinal='0' />
            <column datatype='integer' name='Region' ordinal='1' />
            <column datatype='integer' name='Fresh' ordinal='2' />
            <column datatype='integer' name='Milk' ordinal='3' />
            <column datatype='integer' name='Grocery' ordinal='4' />
            <column datatype='integer' name='Frozen' ordinal='5' />
            <column datatype='integer' name='Detergents_Paper' ordinal='6' />
            <column datatype='integer' name='Delicassen' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H441:no:A1:H441:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Channel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Channel]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Channel</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fresh</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fresh]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Fresh</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Milk]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Milk</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grocery</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Grocery]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Grocery</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frozen</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Frozen]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Frozen</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Detergents_Paper</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Detergents_Paper]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Detergents_Paper</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Delicassen</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Delicassen]</local-name>
            <parent-name>[Wholesale customers data]</parent-name>
            <remote-alias>Delicassen</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Channel (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Channel]' peg='0' size='0.303' />
      </column>
      <column datatype='integer' name='[Channel]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Delicassen]' role='measure' type='quantitative' />
      <column caption='Detergents Paper' datatype='integer' name='[Detergents_Paper]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fresh]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Frozen]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Grocery]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Milk]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Region]' role='measure' type='quantitative' />
      <column caption='Wholesale customers data' datatype='table' name='[__tableau_internal_object_id__].[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Channel]' derivation='Sum' name='[sum:Channel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Delicassen]' derivation='Sum' name='[sum:Delicassen:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Detergents_Paper]' derivation='Sum' name='[sum:Detergents_Paper:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fresh]' derivation='Sum' name='[sum:Fresh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Frozen]' derivation='Sum' name='[sum:Frozen:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Grocery]' derivation='Sum' name='[sum:Grocery:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Milk]' derivation='Sum' name='[sum:Milk:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Region]' derivation='Sum' name='[sum:Region:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/asus/AppData/Local/Temp/TableauTemp/#TableauTemp_1qn46jx0cbasqt0zz9waw1tuby8f.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/20/2024 12:13:21 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Channel</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Channel]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Channel</remote-alias>
              <ordinal>0</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Fresh</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Fresh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Fresh</remote-alias>
              <ordinal>2</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>433</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Milk</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Milk]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Milk</remote-alias>
              <ordinal>3</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>421</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Grocery</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Grocery]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Grocery</remote-alias>
              <ordinal>4</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>430</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Frozen</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Frozen]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Frozen</remote-alias>
              <ordinal>5</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>426</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Detergents_Paper</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Detergents_Paper]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Detergents_Paper</remote-alias>
              <ordinal>6</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>417</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Delicassen</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Delicassen]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Delicassen</remote-alias>
              <ordinal>7</ordinal>
              <family>Wholesale customers data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>403</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Fresh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Detergents_Paper:qk]&quot;</bucket>
            </map>
            <map to='#8174a0'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Delicassen:qk]&quot;</bucket>
            </map>
            <map to='#89a8b2'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Channel:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Region:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Grocery:qk]&quot;</bucket>
            </map>
            <map to='#b3c8cf'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[__tableau_internal_object_id__].[cnt:Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Frozen:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Milk:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Wholesale customers data' id='Wholesale customers data_7CF48FF6A6F5484FA5B462884A6716C2'>
            <properties context=''>
              <relation connection='excel-direct.0lsf4yn162v3yb14i7bed1r54ia4' name='Wholesale customers data' table='[&apos;Wholesale customers data$&apos;]' type='table'>
                <columns gridOrigin='A1:H441:no:A1:H441:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Channel' ordinal='0' />
                  <column datatype='integer' name='Region' ordinal='1' />
                  <column datatype='integer' name='Fresh' ordinal='2' />
                  <column datatype='integer' name='Milk' ordinal='3' />
                  <column datatype='integer' name='Grocery' ordinal='4' />
                  <column datatype='integer' name='Frozen' ordinal='5' />
                  <column datatype='integer' name='Detergents_Paper' ordinal='6' />
                  <column datatype='integer' name='Delicassen' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Wholesale data customer&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Wholesale customers data (wholesalendata)' name='federated.0zxz2nk0hrohxx1akn8za1kdjlzr' />
          </datasources>
          <datasource-dependencies datasource='federated.0zxz2nk0hrohxx1akn8za1kdjlzr'>
            <column datatype='integer' name='[Delicassen]' role='measure' type='quantitative' />
            <column caption='Detergents Paper' datatype='integer' name='[Detergents_Paper]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fresh]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Frozen]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grocery]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Milk]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Region]' role='measure' type='quantitative' />
            <column-instance column='[Delicassen]' derivation='Sum' name='[sum:Delicassen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Detergents_Paper]' derivation='Sum' name='[sum:Detergents_Paper:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fresh]' derivation='Sum' name='[sum:Fresh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Frozen]' derivation='Sum' name='[sum:Frozen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grocery]' derivation='Sum' name='[sum:Grocery:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Milk]' derivation='Sum' name='[sum:Milk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='Sum' name='[sum:Region:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Delicassen:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Detergents_Paper:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Fresh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Frozen:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Grocery:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Milk:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Region:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</rows>
        <cols>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{3119E53B-9A3D-4CFA-9F66-904D714C095F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Wholesale customers data (wholesalendata)' name='federated.0zxz2nk0hrohxx1akn8za1kdjlzr' />
          </datasources>
          <datasource-dependencies datasource='federated.0zxz2nk0hrohxx1akn8za1kdjlzr'>
            <column datatype='integer' name='[Channel]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Region]' role='measure' type='quantitative' />
            <column-instance column='[Channel]' derivation='Sum' name='[sum:Channel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='Sum' name='[sum:Region:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Channel:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Region:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</rows>
        <cols>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{E39650CF-CCEB-4396-98D4-DE9D6BC36275}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Wholesale customers data (wholesalendata)' name='federated.0zxz2nk0hrohxx1akn8za1kdjlzr' />
          </datasources>
          <datasource-dependencies datasource='federated.0zxz2nk0hrohxx1akn8za1kdjlzr'>
            <column datatype='integer' name='[Delicassen]' role='measure' type='quantitative' />
            <column caption='Detergents Paper' datatype='integer' name='[Detergents_Paper]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Fresh]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Frozen]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Grocery]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Milk]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Region]' role='measure' type='quantitative' />
            <column-instance column='[Delicassen]' derivation='Sum' name='[sum:Delicassen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Detergents_Paper]' derivation='Sum' name='[sum:Detergents_Paper:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fresh]' derivation='Sum' name='[sum:Fresh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Frozen]' derivation='Sum' name='[sum:Frozen:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Grocery]' derivation='Sum' name='[sum:Grocery:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Milk]' derivation='Sum' name='[sum:Milk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='Sum' name='[sum:Region:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Delicassen:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Detergents_Paper:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Fresh:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Frozen:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Grocery:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Milk:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Region:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]' />
              <text column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Fresh:qk]' />
              <text column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Frozen:qk]' />
              <text column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Grocery:qk]' />
              <text column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Milk:qk]' />
              <text column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Detergents_Paper:qk]' />
              <text column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[sum:Delicassen:qk]' />
              <lod column='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</rows>
        <cols>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{BFD24999-9AA6-44C1-87AF-A5EFA1308367}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6C13D16-431A-41B3-A2C3-C38EC3A10AD1}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</field>
            <field>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[none:Channel (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E180185F-0A90-4860-9DD4-1550EDA9BD26}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zxz2nk0hrohxx1akn8za1kdjlzr].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C86704CC-3286-4F3F-ACDA-1B5F826BB72B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='107' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      CAXt/wO9vVU2+jx8ogAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
